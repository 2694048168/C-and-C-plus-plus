/**
 * @file 00_dev_env.cpp
 * @author Wei Li (weili_yzzcq@163.com)
 * @brief 
 * @version 0.1
 * @date 2024-09-08
 * 
 * @copyright Copyright (c) 2024
 * 
 */

/** Qt框架的一些基本特性,主要内容包括: 
 * Qt的特点, Qt中的模块划分, Qt的安装, Qt项目文件介绍, Qt中的窗口类, 
 * *Qt窗口的坐标体系, Qt框架的内存回收机制
 * 
 * =====1. Qt框架
 * 是一个跨平台的C++应用程序开发框架;
 * 具有短平快的优秀特质: 投资少、周期短、见效快、效益高;
 * 几乎支持所有的平台, 可用于桌面程序开发以及嵌入式开发;
 * 有属于自己的事件处理机制;
 * 可以搞效率的开发基于窗口的应用程序;
 * Qt是标准 C++ 的扩展, C++的语法在Qt中都是支持的;
 * 良好封装机制使得 Qt 的模块化程度非常高，可重用性较好，可以快速上手;
 * Qt 提供了一种称为 signals/slots 的安全类型来替代 callback（回调函数）,这使得各个元件 之间的协同工作变得十分简单;
 * 
 * =====2. Qt的特点
 * 广泛用于开发GUI程序，也可用于开发非GUI程序, GUI = Graphical User Interface(基于窗口的应用程序开发);
 * 有丰富的 API,Qt 包括多达 250 个以上的 C++ 类, 可以处理正则表达式;
 * *支持 2D/3D 图形渲染，支持 OpenGL; Qt给程序猿提供了非常详细的官方文档; 支持XML，Json;
 * 框架底层模块化，使用者可以根据需求选择相应的模块来使用; 可以轻松跨平台;
 * ?和Java的跨平台方式不同, 在不同的平台使用的是相同的上层接口，但是在底层封装了不同平台对应的API（暗度陈仓）;
 * 
 * ======3. Qt中的模块
 * Qt 基本模块（Qt Essentials)：提供了 Qt 在所有平台上的基本功能;
 * Qt 附加模块（Qt Add-Ons)：实现一些特定功能的提供附加价值的模块;
 * 增值模块（Value-AddModules)：单独发布的提供额外价值的模块或工具;
 * 技术预览模块（Technology Preview Modules）：一些处于开发阶段，但是可以作为技术预览使用的模块;
 * Qt 工具（Qt Tools)：帮助应用程序开发的一些工具;
 * *Qt Core: Qt 类库的核心，所有其他模块都依赖于此模块;
 * *Qt GUI: 设计 GUI 界面的基础类，包括 OpenGL;
 * *Qt Multimedia: 音频、视频、摄像头和广播功能的类;
 * *Qt Network: 使网络编程更简单和轻便的类;
 * *Qt Widgets:	用于构建 GUI 界面的 C++ 图形组件类;
 * *Qt SQL: 使用 SQL 用于数据库操作的类;
 * *Qt Test: 用于应用程序和库进行单元测试的类;
 * 
 * =====4. Qt中的窗口类
 * 1. QWidget
 * 2. QDialog
 * 3. QMainWindow
 * 窗口的显示: 内嵌窗口(父窗口显示的时候, 内嵌的窗口也就被显示出来了);不内嵌窗口(需要调用函数才可以显示);
 * 
 * ====5. 坐标体系
 * 1. 所有坐标的确定都需要先找到坐标原点, Qt的坐标原点在窗口的左上角;
 * 2. x轴向右递增, y轴向下递增;
 * 3. 子窗口的位置是基于父窗口的坐标体系来确定的, 也就是说通过父窗口左上角的坐标点来确定自己的位置;
 * 4. Qt中窗口显示的时候使用的相对坐标, 相对于自己的父窗口;
 * 
 * =====6. 内存回收
 * Qt中有内存回收机制, 但是不是所有被new出的对象被自动回收, 满足条件才可以回收,
 * 如果想要在Qt中实现内存的自动回收, 需要满足以下两个条件:
 * *1. 创建的对象必须是QObject类的子类(间接子类也可以);
 * -----QObject类是没有父类的, Qt中有很大一部分类都是从这个类派生出去的;
 * -----Qt中使用频率很高的窗口类和控件都是 QObject 的直接或间接的子类;
 * -----其他的类可以自己查阅Qt帮助文档;
 * *2. 创建出的类对象, 必须要指定其父对象是谁, 一般情况下有两种操作方式:
 * -----方式1: 通过构造函数, parent: 当前窗口的父对象, 找构造函数中的 parent 参数即可;
 * -----方式2: 通过setParent()方法, 假设这个控件没有在构造的时候指定符对象, 可以调用QWidget的api指定父窗口对象;
 * 
 */

#include "mainwindow.h" // 生成的窗口类头文件

#include <QApplication> // 应用程序类头文件

// ====================================
int main(int argc, char **argv)
{
    // 创建应用程序对象, 在一个Qt项目中实例对象有且仅有一个
    // 类的作用: 检测触发的事件, 进行事件循环并处理
    QApplication app(argc, argv);

    // 创建窗口类对象
    MainWindow window;
    // 显示窗口
    window.show();

    // 应用程序对象开始事件循环, 保证应用程序不退出
    return app.exec();
}
